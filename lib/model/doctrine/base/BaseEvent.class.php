<?php

/**
 * BaseEvent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $conference_id
 * @property string $tagline
 * @property timestamp $start_at
 * @property timestamp $end_at
 * @property integer $city_id
 * @property string $description
 * @property string $website
 * @property string $image
 * @property string $icon
 * @property string $hashtag
 * @property string $address
 * @property string $postcode
 * @property Conference $Conference
 * @property City $City
 * @property Doctrine_Collection $Attending
 * @property Doctrine_Collection $Favouriters
 * @property Doctrine_Collection $Organisers
 * @property Doctrine_Collection $Speakers
 * @property Doctrine_Collection $Watcher
 * 
 * @method integer             getConferenceId()  Returns the current record's "conference_id" value
 * @method string              getTagline()       Returns the current record's "tagline" value
 * @method timestamp           getStartAt()       Returns the current record's "start_at" value
 * @method timestamp           getEndAt()         Returns the current record's "end_at" value
 * @method integer             getCityId()        Returns the current record's "city_id" value
 * @method string              getDescription()   Returns the current record's "description" value
 * @method string              getWebsite()       Returns the current record's "website" value
 * @method string              getImage()         Returns the current record's "image" value
 * @method string              getIcon()          Returns the current record's "icon" value
 * @method string              getHashtag()       Returns the current record's "hashtag" value
 * @method string              getAddress()       Returns the current record's "address" value
 * @method string              getPostcode()      Returns the current record's "postcode" value
 * @method Conference          getConference()    Returns the current record's "Conference" value
 * @method City                getCity()          Returns the current record's "City" value
 * @method Doctrine_Collection getAttending()     Returns the current record's "Attending" collection
 * @method Doctrine_Collection getFavouriters()   Returns the current record's "Favouriters" collection
 * @method Doctrine_Collection getOrganisers()    Returns the current record's "Organisers" collection
 * @method Doctrine_Collection getSpeakers()      Returns the current record's "Speakers" collection
 * @method Doctrine_Collection getWatchers()      Returns the current record's "Watchers" collection
 * @method Doctrine_Collection getPresentations() Returns the current record's "Presentations" collection
 * @method Doctrine_Collection getAttendee()      Returns the current record's "Attendee" collection
 * @method Doctrine_Collection getFavouriter()    Returns the current record's "Favouriter" collection
 * @method Doctrine_Collection getOrganiser()     Returns the current record's "Organiser" collection
 * @method Doctrine_Collection getSpeaker()       Returns the current record's "Speaker" collection
 * @method Doctrine_Collection getWatcher()       Returns the current record's "Watcher" collection
 * @method Event               setConferenceId()  Sets the current record's "conference_id" value
 * @method Event               setTagline()       Sets the current record's "tagline" value
 * @method Event               setStartAt()       Sets the current record's "start_at" value
 * @method Event               setEndAt()         Sets the current record's "end_at" value
 * @method Event               setCityId()        Sets the current record's "city_id" value
 * @method Event               setDescription()   Sets the current record's "description" value
 * @method Event               setWebsite()       Sets the current record's "website" value
 * @method Event               setImage()         Sets the current record's "image" value
 * @method Event               setIcon()          Sets the current record's "icon" value
 * @method Event               setHashtag()       Sets the current record's "hashtag" value
 * @method Event               setAddress()       Sets the current record's "address" value
 * @method Event               setPostcode()      Sets the current record's "postcode" value
 * @method Event               setConference()    Sets the current record's "Conference" value
 * @method Event               setCity()          Sets the current record's "City" value
 * @method Event               setAttending()     Sets the current record's "Attending" collection
 * @method Event               setFavouriters()   Sets the current record's "Favouriters" collection
 * @method Event               setOrganisers()    Sets the current record's "Organisers" collection
 * @method Event               setSpeakers()      Sets the current record's "Speakers" collection
 * @method Event               setWatchers()      Sets the current record's "Watchers" collection
 * @method Event               setPresentations() Sets the current record's "Presentations" collection
 * @method Event               setAttendee()      Sets the current record's "Attendee" collection
 * @method Event               setFavouriter()    Sets the current record's "Favouriter" collection
 * @method Event               setOrganiser()     Sets the current record's "Organiser" collection
 * @method Event               setSpeaker()       Sets the current record's "Speaker" collection
 * @method Event               setWatcher()       Sets the current record's "Watcher" collections
 * @property Doctrine_Collection $Presentations
 * @property Doctrine_Collection $Attendee
 * @property Doctrine_Collection $Favouriter
 * @property Doctrine_Collection $Organiser
 * @property Doctrine_Collection $Speaker
 * @property Doctrine_Collection $Watcher
 * 
 * @method integer             getConferenceId()  Returns the current record's "conference_id" value
 * @method string              getTagline()       Returns the current record's "tagline" value
 * @method timestamp           getStartAt()       Returns the current record's "start_at" value
 * @method timestamp           getEndAt()         Returns the current record's "end_at" value
 * @method integer             getCityId()        Returns the current record's "city_id" value
 * @method string              getDescription()   Returns the current record's "description" value
 * @method string              getWebsite()       Returns the current record's "website" value
 * @method string              getImage()         Returns the current record's "image" value
 * @method string              getIcon()          Returns the current record's "icon" value
 * @method string              getHashtag()       Returns the current record's "hashtag" value
 * @method string              getAddress()       Returns the current record's "address" value
 * @method string              getPostcode()      Returns the current record's "postcode" value
 * @method Conference          getConference()    Returns the current record's "Conference" value
 * @method City                getCity()          Returns the current record's "City" value
 * @method Doctrine_Collection getAttending()     Returns the current record's "Attending" collection
 * @method Doctrine_Collection getFavouriters()   Returns the current record's "Favouriters" collection
 * @method Doctrine_Collection getOrganisers()    Returns the current record's "Organisers" collection
 * @method Doctrine_Collection getSpeakers()      Returns the current record's "Speakers" collection
 * @method Doctrine_Collection getWatchers()      Returns the current record's "Watchers" collection
 * @method Doctrine_Collection getPresentations() Returns the current record's "Presentations" collection
 * @method Doctrine_Collection getAttendee()      Returns the current record's "Attendee" collection
 * @method Doctrine_Collection getFavouriter()    Returns the current record's "Favouriter" collection
 * @method Doctrine_Collection getOrganiser()     Returns the current record's "Organiser" collection
 * @method Doctrine_Collection getSpeaker()       Returns the current record's "Speaker" collection
 * @method Doctrine_Collection getWatcher()       Returns the current record's "Watcher" collection
 * @method Event               setConferenceId()  Sets the current record's "conference_id" value
 * @method Event               setTagline()       Sets the current record's "tagline" value
 * @method Event               setStartAt()       Sets the current record's "start_at" value
 * @method Event               setEndAt()         Sets the current record's "end_at" value
 * @method Event               setCityId()        Sets the current record's "city_id" value
 * @method Event               setDescription()   Sets the current record's "description" value
 * @method Event               setWebsite()       Sets the current record's "website" value
 * @method Event               setImage()         Sets the current record's "image" value
 * @method Event               setIcon()          Sets the current record's "icon" value
 * @method Event               setHashtag()       Sets the current record's "hashtag" value
 * @method Event               setAddress()       Sets the current record's "address" value
 * @method Event               setPostcode()      Sets the current record's "postcode" value
 * @method Event               setConference()    Sets the current record's "Conference" value
 * @method Event               setCity()          Sets the current record's "City" value
 * @method Event               setAttending()     Sets the current record's "Attending" collection
 * @method Event               setFavouriters()   Sets the current record's "Favouriters" collection
 * @method Event               setOrganisers()    Sets the current record's "Organisers" collection
 * @method Event               setSpeakers()      Sets the current record's "Speakers" collection
 * @method Event               setWatchers()      Sets the current record's "Watchers" collection
 * @method Event               setPresentations() Sets the current record's "Presentations" collection
 * @method Event               setAttendee()      Sets the current record's "Attendee" collection
 * @method Event               setFavouriter()    Sets the current record's "Favouriter" collection
 * @method Event               setOrganiser()     Sets the current record's "Organiser" collection
 * @method Event               setSpeaker()       Sets the current record's "Speaker" collection
 * @method Event               setWatcher()       Sets the current record's "Watcher" collection
 * 
 * @package    speakr
 * @subpackage model
 * @author     Steve Lacey
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEvent extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('event');
        $this->hasColumn('conference_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '20',
             ));
        $this->hasColumn('tagline', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('start_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('end_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('city_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '20',
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('website', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('image', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('icon', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('hashtag', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('address', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('postcode', 'string', 8, array(
             'type' => 'string',
             'length' => '8',
             ));

        $this->option('orderBy', 'start_at ASC');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Conference', array(
             'local' => 'conference_id',
             'foreign' => 'id'));

        $this->hasOne('City', array(
             'local' => 'city_id',
             'foreign' => 'id'));

        $this->hasMany('sfGuardUser as Attending', array(
             'refClass' => 'Attendee',
             'local' => 'event_id',
             'foreign' => 'user_id'));

        $this->hasMany('sfGuardUser as Favouriters', array(
             'refClass' => 'Favouriter',
             'local' => 'event_id',
             'foreign' => 'user_id'));

        $this->hasMany('sfGuardUser as Organisers', array(
             'refClass' => 'Organiser',
             'local' => 'event_id',
             'foreign' => 'user_id'));

        $this->hasMany('sfGuardUser as Speakers', array(
             'refClass' => 'Speaker',
             'local' => 'event_id',
             'foreign' => 'user_id'));

        $this->hasMany('sfGuardUser as Watchers', array(
             'refClass' => 'Watcher',
             'local' => 'event_id',
             'foreign' => 'user_id'));

        $this->hasMany('Presentation as Presentations', array(
             'local' => 'id',
             'foreign' => 'event_id'));

        $this->hasMany('Attendee', array(
             'local' => 'id',
             'foreign' => 'event_id'));

        $this->hasMany('Favouriter', array(
             'local' => 'id',
             'foreign' => 'event_id'));

        $this->hasMany('Organiser', array(
             'local' => 'id',
             'foreign' => 'event_id'));

        $this->hasMany('Speaker', array(
             'local' => 'id',
             'foreign' => 'event_id'));

        $this->hasMany('Watcher', array(
             'local' => 'id',
             'foreign' => 'event_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}