homepage:
  url: /
  param:
    module: schedule
    action: index

friends_events:
  url: /friends
  param:
    module: schedule
    action: friends

upcoming_events:
  url: /upcoming
  param:
    module: schedule
    action: upcoming

account:
  url: /account
  param:
    module: user
    action: edit

login:
  url: /login
  param:
    module: sfTwitterAuth
    action: login

login_error:
  url: /login/error
  param:
    module: sfTwitterAuth
    action: failed

logout:
  url: /logout
  param:
    module: sfTwitterAuth
    action: logout

new:
  url: /new
  param:
    module: event
    action: new

content_search:
  url: /content/search
  param:
    module: event
    action: searchPresentableContent

content_search_query:
  url: /content/search/:query
  param:
    module: content
    action: search
    sf_format: json

user_search:
  url: /user/search
  param:
    module: user
    action: search
    sf_format: json

country:
  class: sfDoctrineRoute
  url: /in/:slug
  options:
    model: Country
    type: object
  param:
    module: country
    action: show

region:
  class: sfDoctrineRoute
  url: /in/:country_slug/:slug
  options:
    model: Region
    type: object
  param:
    module: region
    action: show

city:
  class: sfDoctrineRoute
  url: /in/:country_slug/:region_slug/:slug
  options:
    model: City
    type: object
  param:
    module: city
    action: show

user_search_query:
  url: /user/search/:query
  param:
    module: user
    action: search
    sf_format: json

user_twitter_search:
  url: /user/twitter/search
  param:
    module: user
    action: twitterSearch
    sf_format: json

user_twitter_search_query:
  url: /user/twitter/search/:query
  param:
    module: user
    action: twitterSearch
    sf_format: json

profile:
  class: sfDoctrineRoute
  url: /user/:username
  options:
    model: sfGuardUser
    type: object
  param:
    module: user
    action: show

speakers:
  class: sfDoctrineRoute
  url: /:slug/speakers
  options:
    model: Event
    method: findBySlug
    type: object
  param:
    module: event
    action: speakers

add_content:
  class: sfDoctrineRoute
  url: /:slug/content/add
  options:
    model: Event
    method: findBySlug
    type: object
  param:
    module: event
    action: addContent
  requirements:
    sf_method:
      - get
      - post

content:
  class: sfDoctrineRoute
  url: /:speaker_slug/:slug
  options:
    model: Content
    type: object
  param:
    module: content
    action: show

event_map:
  class: sfDoctrineRoute
  url: /:slug/map.:sf_format
  options:
    model: Event
    method: findBySlug
    type: object
  param:
    module: event
    action: map
    sf_format: json

event_content_add:
  class: sfDoctrineRoute
  url: /:slug/content/add/:content_slug
  options:
    model: Event
    method: findBySlug
    type: object
  param:
    module: event
    action: addExistingContent

event_presentable_content_search_query:
  class: sfDoctrineRoute
  url: /:slug/content/search/:query
  options:
    model: Event
    method: findBySlug
    type: object
  param:
    module: event
    action: searchPresentableContent

event_speaker_add:
  class: sfDoctrineRoute
  url: /:slug/speakers/add/:username
  options:
    model: Event
    method: findBySlug
    type: object
  param:
    module: event
    action: addSpeaker

event_speaker_remove:
  class: sfDoctrineRoute
  url: /:slug/speakers/remove/:username
  options:
    model: Event
    method: findBySlug
    type: object
  param:
    module: event
    action: removeSpeaker
  requirements:
    sf_method: post

event_action:
  class: sfDoctrineRoute
  url: /:slug/:verb/:action
  options:
    model: Event
    method: findBySlug
    type: object
  param:
    module: event
  requirements:
    action: attend|watch|favourite|organise|speak
    verb: do|dont
    sf_method: post

event_update:
  class: sfDoctrineRoute
  url: /:slug/update/:action
  options:
    model: Event
    method: findBySlug
    type: object
  param:
    module: event
  requirements:
    action: hashtag|location
    sf_method: post

event:
  class: sfDoctrineRoute
  url: /:slug
  options:
    model: Event
    method: findBySlug
    type: object
  param:
    module: event
    action: show